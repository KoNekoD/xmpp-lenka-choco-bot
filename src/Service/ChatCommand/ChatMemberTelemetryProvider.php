<?php

declare(strict_types=1);

namespace App\Service\ChatCommand;

use App\Entity\Member;
use App\Exception\ChatMemberKickedOrLeftException;
use App\Repository\ChocoRepository;
use Symfony\Component\Clock\Clock;

final readonly class ChatMemberTelemetryProvider
{
    public function __construct(
        private ChocoRepository $chocoRepository
    ) {}

    /**
     * @throws ChatMemberKickedOrLeftException
     */
    public function produce(
        Member $target,
        string $targetMentionString,
        string $targetLinkString
    ): string {
        $now = Clock::get()->now();
        $sinceSpentDateTime = $target->getSinceSpentTime();
        $spentInterval = $sinceSpentDateTime->diff($now);

        $intervalString = ' ';

        if ($spentInterval->y !== 0) {
            $intervalString .= "$spentInterval->y –ª–µ—Ç ";
        }
        if ($spentInterval->m !== 0) {
            $intervalString .= "$spentInterval->m –º–µ—Å—è—Ü–µ–≤ ";
        }
        //                if ($spentInterval->d) {
        $intervalString .= "$spentInterval->d –¥–Ω–µ–π ";
        //                }

        $perDay = $this->chocoRepository
            ->getMessagesCountAggregatedByChatMemberAndTimeRange(
                $now->modify('-1 day'),
                $now,
                $target
            );

        $perWeek = $this->chocoRepository
            ->getMessagesCountAggregatedByChatMemberAndTimeRange(
                $now->modify('-1 week'),
                $now,
                $target
            );

        $perMonth = $this->chocoRepository
            ->getMessagesCountAggregatedByChatMemberAndTimeRange(
                $now->modify('-1 month'),
                $now,
                $target
            );

        $perAll = $this->chocoRepository
            ->getMessagesCountAggregatedByChatMemberAndTimeRange(
                $sinceSpentDateTime,
                $now,
                $target
            );

        $chatMemberReputation = $target->getReputation();

        $sample = (
            "üë§ –≠—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s (%s)\n".
            "‚ñ´Ô∏è [0] –£—Ä–æ–≤–µ–Ω—å —Å–∏–ª—ã: –ù–ï_–†–ï–ê–õ–ò–ó–û–í–ê–ù–û!!!\n".
            "–†–µ–ø—É—Ç–∞—Ü–∏—è: ‚ú® –ù–ï_–†–ï–ê–õ–ò–ó–û–í–ê–ù–û | ‚ûï %s\n".
            "–ü–µ—Ä–≤–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ: %s (%s)\n".
            '–ê–∫—Ç–∏–≤ (–¥–µ–Ω—å|–Ω–µ–¥–µ–ª—è|–º–µ—Å—è—Ü|–≤—Å–µ–≥–æ): %d | %d | %d | %d'
        );

        return sprintf(
            $sample,
            $targetMentionString,
            $targetLinkString,
            // –†–µ–ø—É—Ç–∞—Ü–∏—è: –ù–ï_–†–ï–ê–õ–ò–ó–û–í–ê–ù–û | ‚ûï %s
            $chatMemberReputation,
            // –ü–µ—Ä–≤–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ: %s (%s)
            $sinceSpentDateTime->format('d.m.Y'),
            $intervalString,
            // –ê–∫—Ç–∏–≤ (–¥–µ–Ω—å|–Ω–µ–¥–µ–ª—è|–º–µ—Å—è—Ü|–≤—Å–µ–≥–æ): %d | %d | %d | %d
            $perDay,
            $perWeek,
            $perMonth,
            $perAll
        );
    }
}
